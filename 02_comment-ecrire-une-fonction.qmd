---
editor: 
  markdown: 
    wrap: 72
---

# Comment écrire une fonction ? {.backgroundTitre .unnumbered}

## Comment écrire une fonction ?

Une fonction exécute une série d’instructions, à partir d’éventuels
objets donnés en entrée.

![](img/clipboard-function1.png){fig-align="center"}

On crée une fonction en utilisant l’instruction ***function***.

Elle doit être suivie :

-   d’une paire de parenthèses ⇒ pour indiquer les arguments

-   d’une paire d’accolades ⇒ pour indiquer les instructions

`ma_fonction <- function(...){ ...}`

## Comment écrire une fonction ?

<br>

Quatre éléments principaux pour créer une fonction :

-   Le nom de la fonction

-   Les arguments éventuels de la fonction

-   Un bloc d’instructions pour constituer le corps de la fonction

-   Le résultat éventuel de la fonction

![](img/clipboard-function2.png){fig-align="center"}

## Comment appeler une fonction ?

<br>

[Les parenthèses servent à indiquer les paramètres de la fonction (ou
arguments)]{.Terre_battue1}

> Ce sont ceux qui seront passés lors de l’appel de la fonction

-   On peut prévoir autant d’arguments que l’on souhaite

-   Les arguments doivent être nommés pour être ensuite utilisés dans
    la fonction

<br>

[**Exemple :**]{.underline} `eff_milliers <- function(x, digits)`

## Comment écrire une fonction ?

<br>

Les accolades comprennent une série d’instructions R

>c’est le corps de la fonction, le code qui sera exécuté à l’appel de la fonction

<br>

- On utilise dans le corps de la fonction les arguments renseignés dans
les parenthèses

- La fonction renvoie un résultat via l’instruction **return()**

## Comment écrire une fonction ?

L’instruction `return()` arrête l’exécution de la fonction

⇒ tout ce qui est après le return() ne sera pas exécuté

![](img/clipboard-ecrire5.png)

## Comment écrire une fonction ?

<br>

[**return()** est obligatoire]{.red}


-   une fonction **peut ne rien renvoyer** : certaines fonctions
    accomplissent une action mais ne renvoient rien (affichage de
    graphique, export de fichier par exemple)

-   sans précision, la fonction **renvoie le dernier objet appelé** dans
    le bloc d’instructions

-   pour un code plus sûr et plus clair, il est recommandé d'utiliser
    **systématiquement** la fonction return() afin de préciser l'élément
    à renvoyer, quitte à ce que ce soit l’élément NULL

## Comment écrire une fonction ?

Une fonction est un objet de type *function* – elle apparaît dans
l’environnement global dans la catégorie ***Functions***

![](img/clipboard-ecrire7.png){fig-align="center"}

R traite les fonctions définies par l’utilisateur de la même façon que
les autres.  


 [**Attention à ne pas nommer une fonction personnelle de la même façon qu’une fonction existante, pour ne pas l’écraser.**]{.red}


## Comment écrire une fonction ?

Identifier et écrire une fonction dans la pratique :

Code initial :

![](img/clipboard-ecrire8.png)

## Comment écrire une fonction ?

Identifier et écrire une fonction dans la pratique :

![](img/clipboard-ecrire9.png)
